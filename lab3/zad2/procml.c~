#include <stdlib.h>
#include <stdio.h>
 
#include <sys/types.h>
#include <sys/wait.h> 
 
main(int argc, char* argv[]) { 
	int i;		
	pid_t parentpid = getpid();
	printf("Proces macierzysty %d exit:\n", getpid());

	for (i = 0; i < argc-1; i++){

		pid_t pid;
		if((pid = fork()) == 0) {
			char proces[255];
			
			sprintf(proces, "./potomny %d %d", i, (int)strtol(argv[i+2], NULL, 10));
			//sprintf(proces, "./potomny %d %s", i, (argv[i+2]));
			printf("Uruchamia %s: \n\n", proces);
			exit(system(proces));
			
		}
		
	}

	if (getpid() == parentpid){
		int j;
		for(j=0; j<(int)strtol(argv[1], NULL, 10); j++) { 
			printf("macierzysty: PID: %d krok: %d\n",getpid(),j); 
			sleep(1); 
			} 
	}
	

	for (i = 0; i < argc-1; i++){
		int status;
		pid_t pid = wait(&status);
		printf("Zakonczono %d exit: %d\n", pid, WEXITSTATUS(status));
	}
} 
